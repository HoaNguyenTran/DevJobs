import React from 'react'

const DiamondSvg = ({
  color = 'black',
  width,
  height,
}: {
  color: string
  width: number
  height: number
}) => (
  <svg xmlns="http://www.w3.org/2000/svg" width={width} height={height} viewBox="0 0 48.597 48.589">
    <g id="Path_18597" data-name="Path 18597" transform="translate(-312.765 -386.434)" fill={color}>
      <path d="M 337.063720703125 434.5226135253906 C 336.0094909667969 434.5226135253906 335.0490112304688 433.9841613769531 334.4944763183594 433.0823059082031 L 313.7216491699219 399.3334350585938 C 313.11279296875 398.34619140625 313.1129150390625 397.1185913085938 313.7222595214844 396.1300659179688 L 318.4949645996094 388.37353515625 C 319.0499267578125 387.4727478027344 320.0094604492188 386.9346923828125 321.0618286132812 386.9339599609375 L 353.0626220703125 386.9339599609375 C 354.1151428222656 386.9346923828125 355.0746459960938 387.4721984863281 355.6296081542969 388.3717956542969 L 360.4041442871094 396.1312255859375 C 361.0132141113281 397.1184692382812 361.0129699707031 398.34619140625 360.4031677246094 399.3348083496094 L 339.6307678222656 433.0829772949219 C 339.3909301757812 433.4732055664062 339.0595092773438 433.8092651367188 338.6725158691406 434.0545654296875 C 338.18994140625 434.3607177734375 337.633544921875 434.5226135253906 337.063720703125 434.5226135253906 Z M 316.8459167480469 397.732177734375 L 337.0628356933594 430.5778503417969 L 357.2797546386719 397.732177734375 L 352.7890014648438 390.4339599609375 L 321.336669921875 390.4339599609375 L 316.8459167480469 397.732177734375 Z" stroke="none" />
      <path d="M 321.0621643066406 387.4339599609375 C 320.1845092773438 387.4345703125 319.3841247558594 387.883544921875 318.9208068847656 388.6355590820312 L 314.1478881835938 396.3924255371094 C 313.6383361816406 397.2190856933594 313.6383972167969 398.2459411621094 314.1474609375 399.0713500976562 L 334.92041015625 432.8204040527344 C 335.3832702636719 433.5731811523438 336.1845092773438 434.0226135253906 337.063720703125 434.0226135253906 C 337.5385437011719 434.0226135253906 338.0024719238281 433.8875122070312 338.4048461914062 433.6322326660156 C 338.7278747558594 433.427490234375 339.0046997070312 433.146728515625 339.2049560546875 432.8208923339844 L 359.9776000976562 399.0723266601562 C 360.4875183105469 398.2456359863281 360.4874877929688 397.2185668945312 359.9783020019531 396.3932495117188 L 355.2040710449219 388.6343078613281 C 354.7407531738281 387.88330078125 353.9405212402344 387.4345703125 353.0626220703125 387.4339599609375 L 321.0621643066406 387.4339599609375 M 337.063720703125 431.5226135253906 C 337.0572204589844 431.5226135253906 337.0521850585938 431.5144348144531 337.0497436523438 431.5104675292969 L 316.2759094238281 397.7599792480469 C 316.2659912109375 397.743896484375 316.2660522460938 397.720458984375 316.2765808105469 397.703369140625 L 321.0496520996094 389.9462890625 C 321.0559692382812 389.9360656738281 321.0624694824219 389.9339599609375 321.0638732910156 389.9339599609375 L 321.0630187988281 389.9339599609375 L 353.061767578125 389.9339599609375 C 353.0631713867188 389.9339599609375 353.0697326660156 389.9361572265625 353.0756225585938 389.9456787109375 L 357.849853515625 397.7046203613281 C 357.8597412109375 397.7206115722656 357.8597106933594 397.7438659667969 357.8491821289062 397.7609252929688 L 337.0755310058594 431.5111083984375 C 337.072998046875 431.5152282714844 337.0699768066406 431.5184326171875 337.063720703125 431.5226135253906 M 321.0614624023438 386.4339599609375 L 353.0626220703125 386.4339599609375 C 354.2900695800781 386.434814453125 355.4085083007812 387.0610961914062 356.0551452636719 388.1092834472656 L 360.8299865722656 395.8692016601562 C 361.5386352539062 397.017822265625 361.5383911132812 398.4467468261719 360.8287048339844 399.5972900390625 L 340.0565795898438 433.3450622558594 C 339.7772827148438 433.7994995117188 339.39111328125 434.1910705566406 338.940185546875 434.4768676757812 C 338.3775634765625 434.8338012695312 337.7285461425781 435.0226135253906 337.063720703125 435.0226135253906 C 335.8344421386719 435.0226135253906 334.7147521972656 434.3951721191406 334.0685424804688 433.3441772460938 L 313.2958374023438 399.5955200195312 C 312.58740234375 398.4468078613281 312.5874938964844 397.0180969238281 313.296630859375 395.8677062988281 L 318.0691223144531 388.1115112304688 C 318.7158813476562 387.0617370605469 319.8344116210938 386.434814453125 321.0614624023438 386.4339599609375 Z M 352.5095825195312 390.9339599609375 L 321.6160583496094 390.9339599609375 L 317.4330139160156 397.7321472167969 L 337.0628356933594 429.6239624023438 L 356.6926574707031 397.7321472167969 L 352.5095825195312 390.9339599609375 Z" stroke="none" fill="#fff" />
    </g>
  </svg>
)

interface IProps {
  percent: number
}
const size = 43.5

const DiamondSmall = (props: IProps): JSX.Element => {
  const { percent } = props
  return (
    <div
      style={{
        justifyContent: 'center',
        alignItems: 'flex-start',
        display: 'flex',
        position: 'relative',
        overflow: 'hidden',
      }}
    >
      <div>
        <DiamondSvg color="#8C00E8" width={size} height={size} />
      </div>
      <div
        style={{ position: 'absolute', height: ((100 - percent) / 100) * size, overflow: 'hidden' }}
      >
        <DiamondSvg color="#D7BFFF" width={size} height={size} />
      </div>
      <p
        style={{
          position: 'absolute',
          fontSize: '12px',
          paddingTop: '6px',
          color: 'var(--primary-color)',
        }}
      >
        {percent}%
      </p>
    </div>
  )
}

export default DiamondSmall
